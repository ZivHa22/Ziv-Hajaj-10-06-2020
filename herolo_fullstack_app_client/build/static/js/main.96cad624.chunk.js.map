{"version":3,"sources":["logo.svg","Actions/api.jsx","Actions/EmailsActions.jsx","Components/ComposeEmailPage.jsx","ShareComponent/EmailTble.jsx","Components/MangeEmailsPage.jsx","Components/HomePage.jsx","App.js","serviceWorker.js","reducer/EmailsRducer/EmailsReducer.jsx","reducer/index.jsx","index.js"],"names":["module","exports","axios","create","baseURL","SendEmail","data","dispatch","a","api","post","Res","type","payload","GetInbox","get","GetOutbox","DeleteInboxEmail","DeleteOutboxEmail","ComposeEmailPage","props","MessData","event","MessTemp","state","Message","target","name","subject","value","From","To","message","setState","SendMess","then","Send_Email","status","alert","window","location","reload","className","onChange","this","placeholder","onClick","history","push","Component","connect","bindActionCreators","RowTB","showDetails","showHide","DelFunc","RowData","EmailTble","GetRows","email","deleteFun","ListData","map","row","MangeEmailsPage","componentDidMount","ActiveTbl","Email_Inbox","Email_Outbox","Email","Delete_EmailInbox","Delete_EmailOutbox","InboxShow","InboxList","OutboxList","class","HomePage","GoTO","go","withRouter","App","exact","path","component","Boolean","hostname","match","action","combineReducers","EmailsReducer","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.96cad624.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from \"axios\";\r\n\r\nexport default axios.create(\r\n{\r\n    baseURL:'http://localhost:5000'\r\n});\r\n\r\n\r\n","\r\nimport api from './api';\r\n\r\n\r\nexport const SendEmail = (data)=>async dispatch=>{\r\n    const Res = await api.post('/SendEmail',data);\r\n    dispatch({type:'Send_Email',payload:Res.data})\r\n};\r\n\r\nexport const GetInbox = ()=>async dispatch=>{\r\n    const Res = await api.get('/GetInbox');\r\n    dispatch({type:'Get_Inbox',payload:Res.data})\r\n};\r\nexport const GetOutbox = (data)=>async dispatch=>{\r\n    const Res = await api.get('/GetOutbox',data);\r\n    dispatch({type:'Get_Outbox',payload:Res.data})\r\n};\r\nexport const DeleteInboxEmail = (data)=>async dispatch=>{\r\n    const Res = await api.post('/DeleteInboxEmail',data);\r\n    dispatch({type:'Delete_Inbox_Email',payload:Res.data})\r\n};\r\nexport const DeleteOutboxEmail = (data)=>async dispatch=>{\r\n    const Res = await api.post('/DeleteOutboxEmail',data);\r\n    dispatch({type:'Delete_Inbox_Email',payload:Res.data})\r\n};","import React, { Component } from \"react\";\r\nimport \"../css/GeneralStyle.css\"\r\nimport {connect} from 'react-redux';\r\nimport { bindActionCreators } from \"../../node_modules/redux\";\r\nimport {SendEmail} from \"../Actions/EmailsActions\"\r\n\r\n\r\nclass ComposeEmailPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            Message:{\r\n                subject:\"\",\r\n                From:\"\",\r\n                To:\"\",\r\n                message:\"\"\r\n            }\r\n        }\r\n    }\r\n    MessData = (event) =>{\r\n        let MessTemp = this.state.Message\r\n        switch(event.target.name){\r\n            case \"Subject\":\r\n                MessTemp.subject = event.target.value\r\n                break;\r\n            case \"From\":\r\n                MessTemp.From = event.target.value\r\n                break;\r\n            case \"To\":\r\n                MessTemp.To = event.target.value\r\n                break;\r\n            case \"Message\":\r\n                MessTemp.message = event.target.value\r\n                break;\r\n        }\r\n        this.setState({\r\n            Message:MessTemp\r\n        })\r\n    }\r\n    SendMess = () => {\r\n        this.props.SendEmail(this.state.Message).then(()=>{\r\n            if(this.props.Send_Email.status == \"success\")\r\n            {\r\n                alert(\"The email sent successfully\");\r\n                window.location.reload();\r\n            }\r\n            else\r\n                alert(\"Error\");\r\n        })\r\n    }\r\n    g\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Send Email</h1>\r\n                <div  className=\"contact1-form\">\r\n                    <div className=\"wrap-feild\">\r\n                        <input onChange={this.MessData} placeholder=\"Subject\" name=\"Subject\" type=\"text\" />\r\n                    </div>   \r\n                    <div className=\"wrap-feild\">\r\n                        <input onChange={this.MessData} placeholder=\"From\" name=\"From\" type=\"email\" />\r\n                    </div>   \r\n                    <div className=\"wrap-feild\">\r\n                        <input onChange={this.MessData} placeholder=\"To\" name=\"To\" type=\"email\" />\r\n                    </div>   \r\n                    <div className=\"wrap-feild\">\r\n                        <textarea onChange={this.MessData} placeholder=\"Message\" name=\"Message\" type=\"email\" />\r\n                    </div>\r\n                    <div className=\"wrap-btn\">              \r\n                        <button  onClick={this.SendMess} className=\"send-btn\">Send Email</button>\r\n                        <button  onClick={()=>this.props.history.push(\"./MangeEmailsPage\")} className=\"send-btn\">Your Account</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n      Send_Email:state.Send_Email\r\n    };\r\n  }\r\n  \r\n  function matchDispatchToProps(dispatch){\r\n    return bindActionCreators({\r\n        SendEmail:SendEmail\r\n    },dispatch)\r\n  }\r\n  \r\n  export default connect(mapStateToProps,matchDispatchToProps)(ComposeEmailPage);","import React, { Component } from \"react\";\r\n\r\nclass RowTB extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        debugger\r\n        this.state={\r\n            RowData: this.props.RowData,\r\n            showHide:false\r\n        }\r\n    }\r\n    showDetails = () =>{\r\n        if(this.state.showHide){\r\n          this.setState({\r\n            showHide:false\r\n          })\r\n        }\r\n        else{\r\n          this.setState({\r\n            showHide:true\r\n          })\r\n        }\r\n    }\r\n    DelFunc = () =>{\r\n        this.props.DelFunc(this.state.RowData)\r\n    }\r\n    render(){\r\n        return([\r\n            <tr className=\"visible-details\">\r\n                <td>{this.state.RowData.From}</td>\r\n                <td>{this.state.RowData.To}</td>\r\n                <td>{this.state.RowData.subject}</td>\r\n                <td onClick={this.showDetails}>Open</td>\r\n                <td onClick={this.DelFunc}>remove</td>\r\n            </tr>,\r\n            <tr className={this.state.showHide ?\"show-details\":\"hide-details\"}>\r\n               <td>{this.state.RowData.message}</td>\r\n           </tr>\r\n        ]\r\n        )\r\n    }\r\n}\r\n\r\nclass EmailTble extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            ListData:this.props.ListData\r\n        }\r\n    }\r\n\r\n\r\n    GetRows = (RowData) =>{\r\n        \r\n        return <RowTB RowData={RowData} DelFunc={this.DelFunc}/>\r\n    }\r\n    DelFunc = (email) =>{\r\n        this.props.deleteFun(email)\r\n    }\r\n    render(){\r\n        return(\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>From</th>\r\n                        <th>To</th>\r\n                        <th>Subject</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.ListData.map((row)=>this.GetRows(row))}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\nexport default EmailTble","import React, { Component } from \"react\";\r\nimport \"../css/GeneralStyle.css\"\r\nimport { bindActionCreators } from \"../../node_modules/redux\";\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    GetInbox,\r\n    GetOutbox,\r\n    DeleteInboxEmail,\r\n    DeleteOutboxEmail\r\n} from \"../Actions/EmailsActions\"\r\nimport EmailTble from \"../ShareComponent/EmailTble\";\r\n\r\nclass MangeEmailsPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            InboxShow:true,\r\n            InboxList:[],\r\n            OutboxList:[],\r\n            ActiveTbl:\"\"\r\n        }\r\n    }\r\n    componentDidMount = async () =>{\r\n\r\n       await this.GetInbox();\r\n\r\n    }\r\n    GetInbox = async () =>{\r\n        this.setState({\r\n            ActiveTbl:\"\"\r\n        })\r\n        await this.props.GetInbox().then(()=>{\r\n            this.setState({\r\n                ActiveTbl:<EmailTble ListData={this.props.Email_Inbox} deleteFun ={this.DeleteInboxEmail}/>\r\n            })\r\n           \r\n            \r\n        })\r\n       \r\n    \r\n    }\r\n    GetOutbox = async () =>{\r\n        this.setState({\r\n            ActiveTbl:\"\"\r\n        })\r\n       await this.props.GetOutbox().then(()=>{\r\n            this.setState({\r\n\r\n                ActiveTbl:<EmailTble ListData={this.props.Email_Outbox} deleteFun ={this.DeleteOutboxEmail}/>\r\n            })\r\n        })\r\n       \r\n    }\r\n\r\n    DeleteInboxEmail = (Email) =>{\r\n        this.setState({\r\n            ActiveTbl:\"\"\r\n        })\r\n        this.props.DeleteInboxEmail(Email).then(()=>{\r\n            debugger\r\n            this.setState({\r\n\r\n                ActiveTbl:<EmailTble ListData={this.props.Delete_EmailInbox} deleteFun ={this.DeleteOutboxEmail}/>\r\n            })\r\n        })\r\n    }\r\n    \r\n    DeleteOutboxEmail = (Email) =>{\r\n        this.setState({\r\n            ActiveTbl:\"\"\r\n        })\r\n        this.props.DeleteOutboxEmail(Email).then(()=>{\r\n            debugger\r\n            this.setState({\r\n\r\n                ActiveTbl:<EmailTble ListData={this.props.Delete_EmailOutbox} deleteFun ={this.DeleteOutboxEmail}/>\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n                <h1>My Email Box</h1>\r\n                <div class=\"tab\">\r\n                    <button onClick={this.GetInbox} className=\"tablinks\" >Inbox</button>\r\n                    <button onClick={this.GetOutbox} className=\"tablinks\" >outbox</button>\r\n                </div>\r\n                \r\n                   {this.state.ActiveTbl}\r\n                \r\n                    <div className=\"nav-btn\">\r\n                        <button onClick={()=> this.props.history.push(\"./ComposeEmailPage\")} className=\"btn-goTo\">Send Email</button>\r\n                    </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        Email_Outbox:state.Email_Outbox,\r\n        Email_Inbox:state.Email_Inbox,\r\n        Delete_EmailOutbox:state.Delete_EmailOutbox,\r\n        Delete_EmailInbox:state.Delete_EmailInbox\r\n    };\r\n  };\r\n\r\n  function matchDispatchToProps(dispatch){\r\n    return bindActionCreators({\r\n        GetInbox:GetInbox,\r\n        GetOutbox:GetOutbox,\r\n        DeleteInboxEmail:DeleteInboxEmail,\r\n        DeleteOutboxEmail:DeleteOutboxEmail\r\n    },dispatch)\r\n  }\r\n  export default connect(mapStateToProps,matchDispatchToProps)(MangeEmailsPage);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\n\r\nclass HomePage extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    GoTO = (go)=>{\r\n        switch(go){\r\n            case \"Send\":\r\n                this.props.history.push(\"./ComposeEmailPage\");\r\n                break;\r\n            case \"Acount\":\r\n                this.props.history.push(\"./MangeEmailsPage\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n               <h1>Wolcome To Email System</h1>\r\n               <div className=\"nav-btn\">\r\n                   <button onClick={()=> this.GoTO(\"Send\")} className=\"btn-goTo\">Send Email</button>\r\n                   <button onClick={()=> this.GoTO(\"Acount\")} className=\"btn-goTo\">My Acount</button>\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(HomePage)","import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { Provider, connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch,Redirect } from \"react-router-dom\";\n\nimport ComposeEmailPage from \"./Components/ComposeEmailPage\";\nimport MangeEmailsPage from \"./Components/MangeEmailsPage\";\nimport HomePage from \"./Components/HomePage\";\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n     \n             <Router>\n              <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n                <Route exact path=\"/ComposeEmailPage\" component={ComposeEmailPage} />\n                <Route exact path=\"/MangeEmailsPage\" component={MangeEmailsPage} />\n              </Switch>\n            </Router>\n        \n    </div>\n  )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default (state=[], action)=>{\r\n    switch(action.type){\r\n        case 'Send_Email':\r\n            return action.payload;  \r\n        case 'Get_Inbox':\r\n            return action.payload;   \r\n        case 'Get_Outbox':\r\n            return action.payload;  \r\n        case 'Delete_Inbox_Email':\r\n            return action.payload;  \r\n        case 'Delete_Inbox_Email':\r\n            return action.payload;     \r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\n\r\nimport EmailsReducer from './EmailsRducer/EmailsReducer'\r\n\r\nexport default combineReducers ({\r\n\r\n    Send_Email: EmailsReducer,\r\n    Email_Outbox: EmailsReducer,\r\n    Email_Inbox: EmailsReducer,\r\n    Delete_EmailOutbox: EmailsReducer,\r\n    Delete_EmailInbox: EmailsReducer\r\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducers from \"./reducer\";\n\n\nimport {createStore,applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'; \nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById(\"root\"));\n\nserviceWorker.unregister();"],"sourceRoot":""}